#!/bin/bash

# Step 1: Install Rust if not installed
echo "Installing Rust..."
if ! command -v rustup &> /dev/null; then
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    source $HOME/.cargo/env
else
    echo "Rust is already installed."
fi

# Step 2: Check if the snapshot directory exists, if not, download it
echo "Checking if snapshot directory exists..."
if [ ! -d "/data/full" ]; then
    echo "Snapshot not found. Downloading snapshot..."

    # Set snapshot URL
    export SNAPSHOT_URL="https://snapshots.polkadot.io/polkadot-rocksdb-prune/20241207-074456"

    # Install rclone and download the snapshot
    sudo -v
    curl https://rclone.org/install.sh | sudo bash
    rclone copyurl $SNAPSHOT_URL/files.txt files.txt
    rclone copy --progress --transfers 20 --http-url $SNAPSHOT_URL --no-traverse --http-no-head --disable-http2 --inplace --no-gzip-encoding --size-only --retries 6 --retries-sleep 10s --files-from files.txt :http: /data/full
    rm files.txt
else
    echo "Snapshot found. Skipping download."
fi

# Step 3: Download the Polkadot binary
echo "Downloading Polkadot binary..."
wget -O /data/polkadot https://github.com/paritytech/polkadot-sdk/releases/download/polkadot-stable2412/polkadot

# Step 4: Give Polkadot binary execute permission
echo "Giving execute permission to Polkadot binary..."
chmod +x /data/polkadot

# Step 5: Create systemd service file for Polkadot
echo "Creating systemd service file..."
SERVICE_FILE="/etc/systemd/system/polkadot.service"
cat <<EOF | sudo tee $SERVICE_FILE
[Unit]
Description=Polkadot Service
After=network.target

[Service]
ExecStart=/data/polkadot --name "mainnet-instanodes" --listen-addr /ip4/0.0.0.0/tcp/30333 --rpc-external --rpc-cors=all
ExecStop=/usr/bin/killall -s SIGTERM polkadot
Restart=on-failure
TimeoutStopSec=30s

[Install]
WantedBy=multi-user.target
EOF

# Step 6: Make the soft link for Polkadot DB
echo "Creating soft link for Polkadot DB..."
mkdir -p ~/.local/share/polkadot/chains/polkadot/db/
ln -s /data/full ~/.local/share/polkadot/chains/polkadot/db/

# Step 7: Reload systemd and start the Polkadot service
echo "Reloading systemd and starting Polkadot service..."
sudo systemctl daemon-reload
sudo systemctl enable polkadot.service
sudo systemctl start polkadot.service

echo "Polkadot setup complete and service started."
